name: 'WebSentry Action'
description: 'Check the health of a website and report status'

inputs:
  website-url:
    description: 'The URL of the website to check (e.g., example.com)'
    required: true
  max-retries:
    description: 'Maximum number of retries (default: 3)'
    required: false
    default: '3'
  retry-interval:
    description: 'Time to wait between retries in seconds (default: 5)'
    required: false
    default: '5s'
  request-timeout:
    description: 'Request timeout in seconds (default: 10)'
    required: false
    default: '10s'
  ACCESS_TOKEN:
    description: 'Access token to access the repo'
    required: false
    default: ''

branding:
  icon: 'activity'
  color: 'gray-dark'

outputs:
  health-status:
    description: 'The health status of the website (up or down)'

runs:
  using: 'composite'
  steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16'  # Use the Go version you need

    - name: Run Check
      run: go run ${{ github.action_path }}/main.go -site ${{ inputs.website-url }} -maxretries ${{ inputs.max-retries}} -retryinterval ${{ inputs.retry-interval }} -requesttimeout ${{ inputs.request-timeout}}
      shell: bash
      
    - name: Commit PDF Report
      run: |
        echo ${{ inputs.ACCESS_TOKEN}}
        touch report.pdf
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add report.pdf
        git commit -m "Add website health report"
        git push https://${{ inputs.ACCESS_TOKEN }}@github.com/${{ github.repository }} HEAD:main
      shell: bash

    # - name: Deploy Documentation
    #   run: |
    #     git config --global user.name "GitHub Actions"
    #     git config --global user.email "actions@github.com"
    #     git checkout -b action-test
    #     touch test.md
    #     git add .
    #     git commit -m "Auto-generate documentation"
    #     git push origin gh-pages
    #   env:
    #     GITHUB_TOKEN: ${{ inputs.ACCESS_TOKEN }}